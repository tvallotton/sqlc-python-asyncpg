// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package tutorial

import (
	"database/sql/driver"
	"fmt"

	"github.com/jackc/pgx/v5/pgtype"
)

type Mood string

const (
	MoodSad   Mood = "sad"
	MoodOk    Mood = "ok"
	MoodHappy Mood = "happy"
)

func (e *Mood) Scan(src interface{}) error {
	switch s := src.(type) {
	case []byte:
		*e = Mood(s)
	case string:
		*e = Mood(s)
	default:
		return fmt.Errorf("unsupported scan type for Mood: %T", src)
	}
	return nil
}

type NullMood struct {
	Mood  Mood
	Valid bool // Valid is true if Mood is not NULL
}

// Scan implements the Scanner interface.
func (ns *NullMood) Scan(value interface{}) error {
	if value == nil {
		ns.Mood, ns.Valid = "", false
		return nil
	}
	ns.Valid = true
	return ns.Mood.Scan(value)
}

// Value implements the driver Valuer interface.
func (ns NullMood) Value() (driver.Value, error) {
	if !ns.Valid {
		return nil, nil
	}
	return string(ns.Mood), nil
}

type Location struct {
	Foo      []interface{}
	Money    pgtype.Numeric
	Location interface{}
}

type Post struct {
	ID       pgtype.UUID
	AuthorID pgtype.UUID
	Title    string
}

type User struct {
	ID    pgtype.UUID
	Email string
}
